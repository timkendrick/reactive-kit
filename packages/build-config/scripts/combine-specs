#!/usr/bin/env bash
set -euo pipefail

# Output bundled spec contents that combines all the files provided as arguments.
# Each module is wrapped in an auto-generated markdown section whose title is the package name of the closest ancestor package.json.
# The combined output is printed to stdout.
#
# Example output:
# ```markdown
# # Package specifications
#
# ## `@reactive-kit/plugin-time`
# ... plugin-time spec contents ...
#
# ## `@reactive-kit/plugin-fetch`
# ... plugin-fetch spec contents ...
#
# ...
# ```

# Helper function to find the closest parent directory containing a package.json file
find_package_json() {
    local file="$1"
    local dir=$(dirname "$file")
    while [ "$dir" != "/" ] && [ "$dir" != "." ]; do
        if [ -f "$dir/package.json" ]; then
            echo "$dir/package.json"
            return 0
        fi
        dir=$(dirname "$dir")
    done
    return 1
}

# Combine all the provided spec files into a single file
echo -e "# Package specifications\n"
for file in "$@"; do
    # Find the closest parent directory that contains a package.json file
    if ! package_json="$(find_package_json "$file")"; then
        echo "Warning: No package.json found for $file" >&2
        continue
    fi
    
    # Extract package name from package.json file
    package_name=$(jq -r '.name' "$package_json")
    
    # Output module declaration wrapper
    echo -e "## [\`$package_name\`]($file)\n"
    # Indent all markdown headers to match wrapper section
    sed -E 's/^#/###/' < "$file"
done
